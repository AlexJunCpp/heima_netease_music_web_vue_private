{"remainingRequest":"C:\\Users\\hulinghao\\Desktop\\公开课 - day04\\04-源代码\\hmplayer\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\hulinghao\\Desktop\\公开课 - day04\\04-源代码\\hmplayer\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\hulinghao\\Desktop\\公开课 - day04\\04-源代码\\hmplayer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\hulinghao\\Desktop\\公开课 - day04\\04-源代码\\hmplayer\\src\\views\\05.result.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\hulinghao\\Desktop\\公开课 - day04\\04-源代码\\hmplayer\\src\\views\\05.result.vue","mtime":1583666345913},{"path":"C:\\Users\\hulinghao\\Desktop\\公开课 - day04\\04-源代码\\hmplayer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hulinghao\\Desktop\\公开课 - day04\\04-源代码\\hmplayer\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\hulinghao\\Desktop\\公开课 - day04\\04-源代码\\hmplayer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hulinghao\\Desktop\\公开课 - day04\\04-源代码\\hmplayer\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8g5a+85YWlIGFpeG9zCmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAncmVzdWx0JywKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgLy8gdGFi5YiH5o2i5pe2IOS8muaUueWPmOeahOaVsOaNrgogICAgICBhY3RpdmVJbmRleDogJ3NvbmdzJywKICAgICAgLy8g5L+d5a2YIOafpeivouatjOabsgogICAgICBzb25nTGlzdDogW10sCiAgICAgIC8vIOS/neWtmOatjOWNleeahOWtl+autQogICAgICBwbGF5bGlzdHM6IFtdLAogICAgICAvLyDkv53lrZhtdueahOWtl+autQogICAgICBtdjogW10sCiAgICAgIC8vIOaQnOe0oue7k+aenOeahOaAu+aVsAogICAgICBjb3VudDogMAogICAgfTsKICB9LAogIC8vIOeUn+WRveWRqOacn+mSqeWtkCDlm57osIPlh73mlbAKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICBheGlvcyh7CiAgICAgIHVybDogJ2h0dHBzOi8vYXV0dW1uZmlzaC5jbi9zZWFyY2gnLAogICAgICBtZXRob2Q6ICdnZXQnLAogICAgICBwYXJhbXM6IHsKICAgICAgICBrZXl3b3JkczogdGhpcy4kcm91dGUucXVlcnkucSwKICAgICAgICB0eXBlOiAxLAogICAgICAgIC8vIOiOt+WPlueahOaVsOaNrumHjwogICAgICAgIGxpbWl0OiAxMAogICAgICB9CiAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgY29uc29sZS5sb2cocmVzKTsKICAgICAgX3RoaXMuc29uZ0xpc3QgPSByZXMuZGF0YS5yZXN1bHQuc29uZ3M7IC8vIOiuoeeul+atjOabsuaXtumXtAoKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBfdGhpcy5zb25nTGlzdC5sZW5ndGg7IGkrKykgewogICAgICAgIHZhciBtaW4gPSBwYXJzZUludChfdGhpcy5zb25nTGlzdFtpXS5kdXJhdGlvbiAvIDEwMDAgLyA2MCk7CiAgICAgICAgdmFyIHNlYyA9IHBhcnNlSW50KF90aGlzLnNvbmdMaXN0W2ldLmR1cmF0aW9uIC8gMTAwMCAlIDYwKTsKCiAgICAgICAgaWYgKG1pbiA8IDEwKSB7CiAgICAgICAgICBtaW4gPSAnMCcgKyBtaW47CiAgICAgICAgfQoKICAgICAgICBpZiAoc2VjIDwgMTApIHsKICAgICAgICAgIHNlYyA9ICcwJyArIHNlYzsKICAgICAgICB9IC8vIGNvbnNvbGUubG9nKG1pbiArICd8JyArIHNlYykKCgogICAgICAgIF90aGlzLnNvbmdMaXN0W2ldLmR1cmF0aW9uID0gbWluICsgJzonICsgc2VjOwogICAgICB9IC8vIOS/neWtmOaAu+aVsAoKCiAgICAgIF90aGlzLmNvdW50ID0gcmVzLmRhdGEucmVzdWx0LnNvbmdDb3VudDsKICAgIH0pOwogIH0sCiAgLy8g5L6m5ZCs5ZmoCiAgd2F0Y2g6IHsKICAgIGFjdGl2ZUluZGV4OiBmdW5jdGlvbiBhY3RpdmVJbmRleCgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICAvLyBzb25ncyDmrYzmm7IKICAgICAgLy8gbGlzdHMg5q2M5Y2VCiAgICAgIC8vIG12ICAgIG12CiAgICAgIHZhciB0eXBlID0gMTsgLy8g6I635Y+W5Liq5pWwCgogICAgICB2YXIgbGltaXQgPSAxMDsKCiAgICAgIHN3aXRjaCAodGhpcy5hY3RpdmVJbmRleCkgewogICAgICAgIGNhc2UgJ3NvbmdzJzoKICAgICAgICAgIHR5cGUgPSAxOwogICAgICAgICAgbGltaXQgPSAxMDsKICAgICAgICAgIGJyZWFrOwoKICAgICAgICBjYXNlICdsaXN0cyc6CiAgICAgICAgICB0eXBlID0gMTAwMDsKICAgICAgICAgIGxpbWl0ID0gMTA7CiAgICAgICAgICBicmVhazsKCiAgICAgICAgY2FzZSAnbXYnOgogICAgICAgICAgdHlwZSA9IDEwMDQ7CiAgICAgICAgICBsaW1pdCA9IDg7CiAgICAgICAgICBicmVhazsKCiAgICAgICAgZGVmYXVsdDoKICAgICAgICAgIGJyZWFrOwogICAgICB9CgogICAgICBheGlvcyh7CiAgICAgICAgdXJsOiAnaHR0cHM6Ly9hdXR1bW5maXNoLmNuL3NlYXJjaCcsCiAgICAgICAgbWV0aG9kOiAnZ2V0JywKICAgICAgICBwYXJhbXM6IHsKICAgICAgICAgIGtleXdvcmRzOiB0aGlzLiRyb3V0ZS5xdWVyeS5xLAogICAgICAgICAgdHlwZTogdHlwZSwKICAgICAgICAgIC8vIHR5cGU6dHlwZSwKICAgICAgICAgIC8vIOiOt+WPlueahOaVsOaNrumHjwogICAgICAgICAgbGltaXQ6IGxpbWl0IC8vIGxpbWl0OiBsaW1pdAoKICAgICAgICB9CiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIGNvbnNvbGUubG9nKHJlcyk7IC8vIOiOt+WPluatjOabsgoKICAgICAgICBpZiAodHlwZSA9PSAxKSB7CiAgICAgICAgICAvLyDmrYzmm7IKICAgICAgICAgIF90aGlzMi5zb25nTGlzdCA9IHJlcy5kYXRhLnJlc3VsdC5zb25nczsgLy8g6K6h566X5q2M5puy5pe26Ze0CgogICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBfdGhpczIuc29uZ0xpc3QubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgdmFyIG1pbiA9IHBhcnNlSW50KF90aGlzMi5zb25nTGlzdFtpXS5kdXJhdGlvbiAvIDEwMDAgLyA2MCk7CiAgICAgICAgICAgIHZhciBzZWMgPSBwYXJzZUludChfdGhpczIuc29uZ0xpc3RbaV0uZHVyYXRpb24gLyAxMDAwICUgNjApOwoKICAgICAgICAgICAgaWYgKG1pbiA8IDEwKSB7CiAgICAgICAgICAgICAgbWluID0gJzAnICsgbWluOwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAoc2VjIDwgMTApIHsKICAgICAgICAgICAgICBzZWMgPSAnMCcgKyBzZWM7CiAgICAgICAgICAgIH0gLy8gY29uc29sZS5sb2cobWluICsgJ3wnICsgc2VjKQoKCiAgICAgICAgICAgIF90aGlzMi5zb25nTGlzdFtpXS5kdXJhdGlvbiA9IG1pbiArICc6JyArIHNlYzsKICAgICAgICAgIH0gLy8g5L+d5a2Y5oC75pWwCgoKICAgICAgICAgIF90aGlzMi5jb3VudCA9IHJlcy5kYXRhLnJlc3VsdC5zb25nQ291bnQ7CiAgICAgICAgfSAvLyDojrflj5Yg5q2M5Y2VCiAgICAgICAgZWxzZSBpZiAodHlwZSA9PSAxMDAwKSB7CiAgICAgICAgICAgIC8vIOatjOWNleeahOmAu+i+kQogICAgICAgICAgICBfdGhpczIucGxheWxpc3RzID0gcmVzLmRhdGEucmVzdWx0LnBsYXlsaXN0czsgLy8g5oC75pWwCgogICAgICAgICAgICBfdGhpczIuY291bnQgPSByZXMuZGF0YS5yZXN1bHQucGxheWxpc3RDb3VudDsgLy8g5aSE55CGIOaSreaUvuasoeaVsAoKICAgICAgICAgICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IF90aGlzMi5wbGF5bGlzdHMubGVuZ3RoOyBfaSsrKSB7CiAgICAgICAgICAgICAgaWYgKF90aGlzMi5wbGF5bGlzdHNbX2ldLnBsYXlDb3VudCA+IDEwMDAwMCkgewogICAgICAgICAgICAgICAgX3RoaXMyLnBsYXlsaXN0c1tfaV0ucGxheUNvdW50ID0gcGFyc2VJbnQoX3RoaXMyLnBsYXlsaXN0c1tfaV0ucGxheUNvdW50IC8gMTAwMDApICsgJ+S4hyc7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAvLyDkv53lrZhtduaVsOaNrgogICAgICAgICAgICBfdGhpczIubXYgPSByZXMuZGF0YS5yZXN1bHQubXZzOyAvLyDmgLvmlbAKCiAgICAgICAgICAgIF90aGlzMi5jb3VudCA9IHJlcy5kYXRhLnJlc3VsdC5tdkNvdW50OyAvLyDlpITnkIbmlbDmja4KCiAgICAgICAgICAgIGZvciAodmFyIF9pMiA9IDA7IF9pMiA8IF90aGlzMi5tdi5sZW5ndGg7IF9pMisrKSB7CiAgICAgICAgICAgICAgLy8g5pe26Ze0CiAgICAgICAgICAgICAgdmFyIF9taW4gPSBwYXJzZUludChfdGhpczIubXZbX2kyXS5kdXJhdGlvbiAvIDEwMDAgLyA2MCk7CgogICAgICAgICAgICAgIHZhciBfc2VjID0gcGFyc2VJbnQoX3RoaXMyLm12W19pMl0uZHVyYXRpb24gLyAxMDAwICUgNjApOwoKICAgICAgICAgICAgICBpZiAoX21pbiA8IDEwKSB7CiAgICAgICAgICAgICAgICBfbWluID0gJzAnICsgX21pbjsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIGlmIChfc2VjIDwgMTApIHsKICAgICAgICAgICAgICAgIF9zZWMgPSAnMCcgKyBfc2VjOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgX3RoaXMyLm12W19pMl0uZHVyYXRpb24gPSBfbWluICsgJzonICsgX3NlYzsgLy8g5pKt5pS+5qyh5pWwCgogICAgICAgICAgICAgIGlmIChfdGhpczIubXZbX2kyXS5wbGF5Q291bnQgPiAxMDAwMDApIHsKICAgICAgICAgICAgICAgIF90aGlzMi5tdltfaTJdLnBsYXlDb3VudCA9IHBhcnNlSW50KF90aGlzMi5tdltfaTJdLnBsYXlDb3VudCAvIDEwMDAwKSArICfkuIcnOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICB9KTsKICAgIH0KICB9LAogIC8vIOaWueazlQogIG1ldGhvZHM6IHsKICAgIC8vIOWOu+atjOWNleivpuaDhemhtQogICAgdG9QbGF5bGlzdDogZnVuY3Rpb24gdG9QbGF5bGlzdChpZCkgewogICAgICAvLyDot7PovazlubbmkLrluKbmlbDmja7ljbPlj68KICAgICAgdGhpcy4kcm91dGVyLnB1c2goIi9wbGF5bGlzdD9xPSIuY29uY2F0KGlkKSk7CiAgICB9LAogICAgcGxheU11c2ljOiBmdW5jdGlvbiBwbGF5TXVzaWMoaWQpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICBheGlvcyh7CiAgICAgICAgdXJsOiAnaHR0cHM6Ly9hdXR1bW5maXNoLmNuL3NvbmcvdXJsJywKICAgICAgICBtZXRob2Q6ICdnZXQnLAogICAgICAgIHBhcmFtczogewogICAgICAgICAgaWQ6IGlkIC8vIGlkOmlkCgogICAgICAgIH0KICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgLy8gY29uc29sZS5sb2cocmVzKQogICAgICAgIHZhciB1cmwgPSByZXMuZGF0YS5kYXRhWzBdLnVybDsgLy8gY29uc29sZS5sb2codGhpcy4kcGFyZW50Lm11c2ljVXJsKQogICAgICAgIC8vIOiuvue9rue7meeItue7hOS7tueahCDmkq3mlL7lnLDlnYAKCiAgICAgICAgX3RoaXMzLiRwYXJlbnQubXVzaWNVcmwgPSB1cmw7CiAgICAgIH0pOwogICAgfQogIH0KfTs="},{"version":3,"sources":["05.result.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"result-container\">\r\n    <div class=\"title-wrap\">\r\n      <!-- 标题 -->\r\n      <h2 class=\"title\">{{ $route.query.q }}</h2>\r\n      <span class=\"sub-title\">找到 {{ count }} 个结果</span>\r\n    </div>\r\n    <el-tabs v-model=\"activeIndex\">\r\n      <el-tab-pane label=\"歌曲\" name=\"songs\">\r\n        <table class=\"el-table\">\r\n          <thead>\r\n            <th></th>\r\n            <th>音乐标题</th>\r\n            <th>歌手</th>\r\n            <th>专辑</th>\r\n            <th>时长</th>\r\n          </thead>\r\n          <tbody>\r\n            <tr\r\n              v-for=\"(item, index) in songList\"\r\n              :key=\"index\"\r\n              class=\"el-table__row\"\r\n              @dblclick=\"playMusic(item.id)\"\r\n            >\r\n              <td>1</td>\r\n              <td>\r\n                <div class=\"song-wrap\">\r\n                  <div class=\"name-wrap\">\r\n                    <!-- 歌名 -->\r\n                    <span>{{ item.name }}</span>\r\n                    <!-- mv的图标 -->\r\n                    <span v-if=\"item.mvid != 0\" class=\"iconfont icon-mv\"></span>\r\n                  </div>\r\n                  <!-- 二级标题 -->\r\n                  <span v-if=\"item.alias.length != 0\">{{ item.alias[0] }}</span>\r\n                </div>\r\n              </td>\r\n              <td>{{ item.artists[0].name }}</td>\r\n              <td>{{ item.album.name }}</td>\r\n              <td>{{ item.duration }}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </el-tab-pane>\r\n      <el-tab-pane label=\"歌单\" name=\"lists\">\r\n        <div class=\"items\">\r\n          <div\r\n            v-for=\"(item, index) in playlists\"\r\n            :key=\"index\"\r\n            class=\"item\"\r\n            @click=\"toPlaylist(item.id)\"\r\n          >\r\n            <div class=\"img-wrap\">\r\n              <div class=\"num-wrap\">\r\n                播放量:\r\n                <span class=\"num\">{{ item.playCount }}</span>\r\n              </div>\r\n              <img :src=\"item.coverImgUrl\" alt=\"\" />\r\n              <span class=\"iconfont icon-play\"></span>\r\n            </div>\r\n            <p class=\"name\">{{ item.name }}</p>\r\n          </div>\r\n        </div>\r\n      </el-tab-pane>\r\n      <el-tab-pane label=\"MV\" name=\"mv\">\r\n        <div class=\"items mv\">\r\n          <div v-for=\"(item, index) in mv\" :key=\"index\" class=\"item\">\r\n            <div class=\"img-wrap\">\r\n              <!-- 封面 -->\r\n              <img :src=\"item.cover\" alt=\"\" />\r\n              <span class=\"iconfont icon-play\"></span>\r\n              <div class=\"num-wrap\">\r\n                <div class=\"iconfont icon-play\"></div>\r\n                <!-- 播放次数 -->\r\n                <div class=\"num\">{{ item.playCount }}</div>\r\n              </div>\r\n              <!-- 持续时间 -->\r\n              <span class=\"time\">{{ item.duration }}</span>\r\n            </div>\r\n            <div class=\"info-wrap\">\r\n              <!-- mv名 -->\r\n              <div class=\"name\">{{ item.name }}</div>\r\n              <!-- 歌手名 -->\r\n              <div class=\"singer\">{{ item.artistName }}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </el-tab-pane>\r\n    </el-tabs>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  // 导入 aixos\r\n  import axios from 'axios'\r\n  export default {\r\n    name: 'result',\r\n    data() {\r\n      return {\r\n        // tab切换时 会改变的数据\r\n        activeIndex: 'songs',\r\n        // 保存 查询歌曲\r\n        songList: [],\r\n        // 保存歌单的字段\r\n        playlists: [],\r\n        // 保存mv的字段\r\n        mv: [],\r\n        // 搜索结果的总数\r\n        count: 0\r\n      }\r\n    },\r\n    // 生命周期钩子 回调函数\r\n    created() {\r\n      axios({\r\n        url: 'https://autumnfish.cn/search',\r\n        method: 'get',\r\n        params: {\r\n          keywords: this.$route.query.q,\r\n          type: 1,\r\n          // 获取的数据量\r\n          limit: 10\r\n        }\r\n      }).then(res => {\r\n        console.log(res)\r\n        this.songList = res.data.result.songs\r\n        // 计算歌曲时间\r\n        for (let i = 0; i < this.songList.length; i++) {\r\n          let min = parseInt(this.songList[i].duration / 1000 / 60)\r\n          let sec = parseInt((this.songList[i].duration / 1000) % 60)\r\n          if (min < 10) {\r\n            min = '0' + min\r\n          }\r\n          if (sec < 10) {\r\n            sec = '0' + sec\r\n          }\r\n          // console.log(min + '|' + sec)\r\n          this.songList[i].duration = min + ':' + sec\r\n        }\r\n        // 保存总数\r\n        this.count = res.data.result.songCount\r\n      })\r\n    },\r\n    // 侦听器\r\n    watch: {\r\n      activeIndex() {\r\n        // songs 歌曲\r\n        // lists 歌单\r\n        // mv    mv\r\n        let type = 1\r\n\r\n        // 获取个数\r\n        let limit = 10\r\n        switch (this.activeIndex) {\r\n          case 'songs':\r\n            type = 1\r\n            limit = 10\r\n            break\r\n          case 'lists':\r\n            type = 1000\r\n            limit = 10\r\n            break\r\n          case 'mv':\r\n            type = 1004\r\n            limit = 8\r\n            break\r\n\r\n          default:\r\n            break\r\n        }\r\n\r\n        axios({\r\n          url: 'https://autumnfish.cn/search',\r\n          method: 'get',\r\n          params: {\r\n            keywords: this.$route.query.q,\r\n            type, // type:type,\r\n            // 获取的数据量\r\n            limit // limit: limit\r\n          }\r\n        }).then(res => {\r\n          console.log(res)\r\n          // 获取歌曲\r\n          if (type == 1) {\r\n            // 歌曲\r\n            this.songList = res.data.result.songs\r\n            // 计算歌曲时间\r\n            for (let i = 0; i < this.songList.length; i++) {\r\n              let min = parseInt(this.songList[i].duration / 1000 / 60)\r\n              let sec = parseInt((this.songList[i].duration / 1000) % 60)\r\n              if (min < 10) {\r\n                min = '0' + min\r\n              }\r\n              if (sec < 10) {\r\n                sec = '0' + sec\r\n              }\r\n              // console.log(min + '|' + sec)\r\n              this.songList[i].duration = min + ':' + sec\r\n            }\r\n            // 保存总数\r\n            this.count = res.data.result.songCount\r\n          }\r\n          // 获取 歌单\r\n          else if (type == 1000) {\r\n            // 歌单的逻辑\r\n            this.playlists = res.data.result.playlists\r\n            // 总数\r\n            this.count = res.data.result.playlistCount\r\n            // 处理 播放次数\r\n            for (let i = 0; i < this.playlists.length; i++) {\r\n              if (this.playlists[i].playCount > 100000) {\r\n                this.playlists[i].playCount =\r\n                  parseInt(this.playlists[i].playCount / 10000) + '万'\r\n              }\r\n            }\r\n          } else {\r\n            // 保存mv数据\r\n            this.mv = res.data.result.mvs\r\n            // 总数\r\n            this.count = res.data.result.mvCount\r\n            // 处理数据\r\n            for (let i = 0; i < this.mv.length; i++) {\r\n              // 时间\r\n              let min = parseInt(this.mv[i].duration / 1000 / 60)\r\n              let sec = parseInt((this.mv[i].duration / 1000) % 60)\r\n              if (min < 10) {\r\n                min = '0' + min\r\n              }\r\n              if (sec < 10) {\r\n                sec = '0' + sec\r\n              }\r\n              this.mv[i].duration = min + ':' + sec\r\n\r\n              // 播放次数\r\n              if (this.mv[i].playCount > 100000) {\r\n                this.mv[i].playCount =\r\n                  parseInt(this.mv[i].playCount / 10000) + '万'\r\n              }\r\n            }\r\n          }\r\n        })\r\n      }\r\n    },\r\n    // 方法\r\n    methods: {\r\n      // 去歌单详情页\r\n      toPlaylist(id){\r\n        // 跳转并携带数据即可\r\n        this.$router.push(`/playlist?q=${id}`)\r\n      },\r\n      playMusic(id) {\r\n        axios({\r\n          url: 'https://autumnfish.cn/song/url',\r\n          method: 'get',\r\n          params: {\r\n            id // id:id\r\n          }\r\n        }).then(res => {\r\n          // console.log(res)\r\n          let url = res.data.data[0].url\r\n          // console.log(this.$parent.musicUrl)\r\n          // 设置给父组件的 播放地址\r\n          this.$parent.musicUrl = url\r\n        })\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style></style>\r\n"],"sourceRoot":"src/views"}]}